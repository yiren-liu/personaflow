# PersonaFlow Database Configuration
# Copy this file to rds.env and fill in your actual database credentials

# ============================================================================
# PostgreSQL Database Configuration
# ============================================================================

# Database connection details
# For local PostgreSQL installation:
RQGEN_DB_HOST=localhost
RQGEN_DB_PORT=5432
RQGEN_DB_USER=your_database_username
RQGEN_DB_PASS=your_database_password
RQGEN_DB_NAME=personaflow

# For Supabase (recommended):
# RQGEN_DB_HOST=db.your-project-id.supabase.co
# RQGEN_DB_PORT=5432
# RQGEN_DB_USER=postgres
# RQGEN_DB_PASS=your_supabase_database_password
# RQGEN_DB_NAME=postgres

# For Docker deployment with PostgreSQL container:
# RQGEN_DB_HOST=postgres
# RQGEN_DB_PORT=5432
# RQGEN_DB_USER=personaflow
# RQGEN_DB_PASS=your_secure_password
# RQGEN_DB_NAME=personaflow

# ============================================================================
# Database Setup Instructions
# ============================================================================

# Option 1: Supabase (Recommended for quick setup)
# 1. Go to https://supabase.com/
# 2. Create a new project
# 3. Go to Settings > Database
# 4. Copy the connection details
# 5. Use the connection pooler URL for better performance

# Option 2: Local PostgreSQL
# 1. Install PostgreSQL on your system
# 2. Create a new database: CREATE DATABASE personaflow;
# 3. Create a user: CREATE USER your_username WITH PASSWORD 'your_password';
# 4. Grant privileges: GRANT ALL PRIVILEGES ON DATABASE personaflow TO your_username;

# Option 3: Docker PostgreSQL
# The docker-compose.yaml file can include a PostgreSQL service
# Uncomment the postgres service section in docker-compose.yaml

# ============================================================================
# Security Notes
# ============================================================================

# - Use strong passwords (minimum 16 characters)
# - Enable SSL connections in production
# - Restrict database access to application servers only
# - Regularly backup your database
# - Monitor database access logs

# ============================================================================
# Connection Testing
# ============================================================================

# Test your connection using:
# psql -h $RQGEN_DB_HOST -p $RQGEN_DB_PORT -U $RQGEN_DB_USER -d $RQGEN_DB_NAME

# Or using Python:
# python -c "
# import psycopg2
# conn = psycopg2.connect(
#     host='$RQGEN_DB_HOST',
#     port='$RQGEN_DB_PORT', 
#     user='$RQGEN_DB_USER',
#     password='$RQGEN_DB_PASS',
#     database='$RQGEN_DB_NAME'
# )
# print('Database connection successful!')
# conn.close()
# " 